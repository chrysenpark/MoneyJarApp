{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ChrysenPark/Downloads/MoneyJarApp/src/main/frontend/src/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport history from \"./history\";\nimport Jar from \"./Components/Jar\";\nimport Button from \"./Components/Buttons\";\nimport Wrapper from \"./Components/Wrapper\";\nimport Message from \"./Components/Message\";\nimport Title from \"./Components/Title\";\n\nconst getUsersJars = () => {\n  const username = window.localStorage.getItem('user');\n  return axios.get('https://chrysenapi.com/api/jars/' + username).then(jars => {\n    console.log(jars.data);\n    return jars.data;\n  }).catch(err => {\n    console.log(err);\n  });\n};\n\nconst createJar = event => {\n  event.preventDefault();\n  const username = window.localStorage.getItem('user');\n  return axios.post('https://chrysenapi.com/api/jars/create/' + username, 'untitled', {\n    \"headers\": {\n      \"content-type\": \"application/json\"\n    }\n  }).then(response => {\n    window.location.reload();\n    console.log(response);\n  }).catch(err => {\n    console.log(err);\n  });\n};\n\nconst logOut = event => {\n  event.preventDefault();\n  const username = window.localStorage.getItem('user');\n  axios.delete('https://chrysenapi.com/api/logins/' + username.toLowerCase()).then(response => {\n    console.log(response);\n    history.push(\"/login\");\n  }).catch(err => {\n    console.log(err);\n  });\n};\n\nfunction Dashboard() {\n  _s();\n\n  const [jarInfos, setJarInfos] = useState([]);\n  const [order, setOrder] = useState(\"\");\n  useEffect(() => {\n    getUsersJars().then(jarData => {\n      const sortedData = jarData.sort(function (a, b) {\n        return getJarName(a).localeCompare(getJarName(b));\n      });\n      setJarInfos(sortedData);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  const getJarID = jarInfo => {\n    const {\n      id\n    } = jarInfo;\n    return `${id}`;\n  };\n\n  const getJarName = jarInfo => {\n    const {\n      name\n    } = jarInfo;\n    return `${name}`;\n  };\n\n  const getJarAmount = jarInfo => {\n    const {\n      amount\n    } = jarInfo;\n    return `${amount}`;\n  };\n\n  const getJarImage = jarInfo => {\n    const amount = getJarAmount(jarInfo);\n    const num = parseInt(amount);\n    if (num === 0) return \"jarEmpty\";else if (num > 500) return \"jarFull\";else if (num < 500) return \"jarHalf\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      main: \"Money Jars\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Message, {\n      message: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), jarInfos.map((jarInfo, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        left: 50\n      },\n      children: /*#__PURE__*/_jsxDEV(Jar, {\n        Class: getJarImage(jarInfo),\n        Name: getJarName(jarInfo),\n        Amount: getJarAmount(jarInfo),\n        onClick: () => {\n          //const jar =  JSON.stringify(jarInfo);\n          localStorage.setItem('jarID', getJarID(jarInfo));\n          localStorage.setItem('jar', JSON.stringify(jarInfo));\n          history.push(\"/openJar\");\n          window.location.reload();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this)\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(Message, {\n      message: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"button\",\n      buttonStyle: \"btn--rank--solid\",\n      buttonSize: \"btn-small\",\n      onClick: createJar,\n      children: \"Create Jar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"button\",\n      buttonStyle: \"btn--solid--solid\",\n      buttonSize: \"btn-small\",\n      onClick: logOut,\n      children: \"Log Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Message, {\n      message: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Message, {\n      message: \"*Remember to log out before exiting app*\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Dashboard, \"qGx9eZ9WMzR3QEg255h7EjTDec0=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/ChrysenPark/Downloads/MoneyJarApp/src/main/frontend/src/Dashboard.js"],"names":["React","useEffect","useState","axios","history","Jar","Button","Wrapper","Message","Title","getUsersJars","username","window","localStorage","getItem","get","then","jars","console","log","data","catch","err","createJar","event","preventDefault","post","response","location","reload","logOut","delete","toLowerCase","push","Dashboard","jarInfos","setJarInfos","order","setOrder","jarData","sortedData","sort","a","b","getJarName","localeCompare","getJarID","jarInfo","id","name","getJarAmount","amount","getJarImage","num","parseInt","map","position","left","setItem","JSON","stringify"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport history from \"./history\";\nimport Jar from \"./Components/Jar\";\nimport Button from \"./Components/Buttons\";\nimport Wrapper from \"./Components/Wrapper\";\nimport Message from \"./Components/Message\";\nimport Title from \"./Components/Title\";\n\n\nconst getUsersJars = () => {\n    const username = window.localStorage.getItem('user');\n    return axios\n        .get('https://chrysenapi.com/api/jars/' + username)\n        .then((jars) => {\n            console.log(jars.data);\n            return jars.data;\n        }).catch((err) => {\n            console.log(err);\n        });\n};\n\nconst createJar = (event) => {\n    event.preventDefault();\n    const username = window.localStorage.getItem('user');\n    return axios\n        .post('https://chrysenapi.com/api/jars/create/' + username,\n            'untitled', {\n                \"headers\": {\n                    \"content-type\": \"application/json\",\n                },\n            }\n        )\n        .then((response) => {\n            window.location.reload();\n            console.log(response);\n        }).catch((err) => {\n            console.log(err);\n        });\n};\n\nconst logOut = (event) => {\n    event.preventDefault();\n    const username = window.localStorage.getItem('user');\n\n    axios.delete('https://chrysenapi.com/api/logins/' + username.toLowerCase()\n    ).then((response) => {\n        console.log(response);\n        history.push(\"/login\");\n    }).catch((err) => {\n        console.log(err);\n    });\n};\n\nfunction Dashboard() {\n    const [jarInfos, setJarInfos] = useState([]);\n    const [order, setOrder] = useState(\"\");\n\n    useEffect(() => {\n        getUsersJars().then((jarData) => {\n            const sortedData = jarData.sort(function (a,b) {\n                return getJarName(a).localeCompare(getJarName(b))})\n            setJarInfos(sortedData);\n        }).catch((err) => {\n            console.log(err);\n        });\n    }, []);\n\n    const getJarID = (jarInfo) => {\n        const {id} = jarInfo;\n        return `${id}`\n    };\n\n    const getJarName = (jarInfo) => {\n        const {name} = jarInfo;\n        return `${name}`\n    };\n\n    const getJarAmount = (jarInfo) => {\n        const {amount} = jarInfo;\n        return `${amount}`\n    };\n\n    const getJarImage = (jarInfo) => {\n        const amount = getJarAmount(jarInfo);\n        const num = parseInt(amount);\n        if(num === 0) return \"jarEmpty\";\n        else if(num > 500) return \"jarFull\";\n        else if(num < 500) return \"jarHalf\";\n    };\n\n\n\n    return (\n        <Wrapper>\n            <Title main = {\"Money Jars\"}/>\n            <Message message={\"\"} />\n            {jarInfos.map((jarInfo, id) => (\n                <div key={id} style={{position: 'relative', left: 50}}>\n                    <Jar\n                        Class = {getJarImage(jarInfo)}\n                        Name = {getJarName(jarInfo)}\n                        Amount = {getJarAmount(jarInfo)}\n                        onClick={() => {\n                            //const jar =  JSON.stringify(jarInfo);\n                            localStorage.setItem('jarID', getJarID(jarInfo));\n                            localStorage.setItem('jar', JSON.stringify(jarInfo));\n                            history.push(\"/openJar\");\n                            window.location.reload();\n                        }}\n                    />\n                </div>\n            ))}\n\n\n            <Message message={\"\"} />\n            <Button type =\"button\"  buttonStyle=\"btn--rank--solid\" buttonSize=\"btn-small\" onClick={createJar}>Create Jar</Button>\n            <Button type =\"button\"  buttonStyle=\"btn--solid--solid\" buttonSize=\"btn-small\" onClick={logOut}>Log Out</Button>\n            <Message message={\"\"} />\n            <Message message={\"*Remember to log out before exiting app*\"} />\n        </Wrapper>\n    )\n}\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}